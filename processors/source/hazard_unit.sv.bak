/*
  Eric Villasenor
  evillase@gmail.com

  this block is the coherence protocol
  and artibtration for ram
*/

// interface include
`include "hazard_unit_if.vh"

// memory types
`include "cpu_types_pkg.vh"

module hazard_unit (
  hazard_unit_if.hu huif
);

  always_comb
  begin
	huif.freeze = 0;
	huif.flush = 0;
	if(huif.idex_instr != huif.ifid_instr && huif.idex_instr == huif.exmem_instr && huif.ifid_instr == huif.exmem_instr)
	begin
	// LW
	if((huif.idex_instr[20:16] == huif.ifid_instr[25:21] || huif.idex_instr[20:16] == huif.ifid_instr[20:16]))
	begin
 		huif.freeze = 1;
	end
	// rtype
	if((huif.idex_instr[15:11] == huif.ifid_instr[25:21] || huif.idex_instr[15:11] == huif.ifid_instr[20:16] || huif.exmem_instr[15:11] == huif.ifid_instr[25:21] || huif.exmem_instr[15:11] == huif.ifid_instr[20:16]))
	begin
		huif.freeze = 1;
	end
	end
	//flush
	if(huif.jsel <= 4)
	begin
		huif.flush = 1;
	end
  end

endmodule
